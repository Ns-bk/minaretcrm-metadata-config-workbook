<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Salesforce Metadata Inventory Generator</title>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/xlsx/0.18.5/xlsx.full.min.js"></script>
    <style>
        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            max-width: 1200px;
            margin: 0 auto;
            padding: 20px;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            min-height: 100vh;
        }
        
        .container {
            background: white;
            border-radius: 15px;
            padding: 30px;
            box-shadow: 0 20px 40px rgba(0,0,0,0.1);
            backdrop-filter: blur(10px);
        }
        
        h1 {
            color: #2c3e50;
            text-align: center;
            margin-bottom: 30px;
            font-size: 2.5em;
            font-weight: 300;
        }
        
        .description {
            background: #f8f9fa;
            padding: 20px;
            border-radius: 10px;
            margin-bottom: 30px;
            border-left: 5px solid #007cba;
        }
        
        .sheet-preview {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
            gap: 20px;
            margin-bottom: 30px;
        }
        
        .sheet-card {
            background: #fff;
            border: 2px solid #e9ecef;
            border-radius: 10px;
            padding: 15px;
            transition: all 0.3s ease;
        }
        
        .sheet-card:hover {
            border-color: #007cba;
            box-shadow: 0 5px 15px rgba(0,124,186,0.1);
            transform: translateY(-2px);
        }
        
        .sheet-title {
            font-weight: bold;
            color: #ff8c00;
            background: linear-gradient(45deg, #ff8c00, #ffa500);
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
            margin-bottom: 10px;
            font-size: 1.1em;
        }
        
        .sheet-columns {
            font-size: 0.9em;
            color: #6c757d;
            line-height: 1.4;
        }
        
        .generate-btn {
            display: block;
            width: 300px;
            margin: 30px auto;
            padding: 15px 30px;
            background: linear-gradient(45deg, #007cba, #0056b3);
            color: white;
            border: none;
            border-radius: 50px;
            font-size: 1.2em;
            font-weight: 600;
            cursor: pointer;
            transition: all 0.3s ease;
            box-shadow: 0 5px 15px rgba(0,124,186,0.3);
        }
        
        .generate-btn:hover {
            transform: translateY(-3px);
            box-shadow: 0 8px 25px rgba(0,124,186,0.4);
        }
        
        .generate-btn:active {
            transform: translateY(-1px);
        }
        
        .status {
            text-align: center;
            margin-top: 20px;
            padding: 15px;
            border-radius: 10px;
            font-weight: 500;
        }
        
        .status.success {
            background: #d4edda;
            color: #155724;
            border: 1px solid #c3e6cb;
        }
        
        .status.error {
            background: #f8d7da;
            color: #721c24;
            border: 1px solid #f5c6cb;
        }
        
        .features {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
            gap: 20px;
            margin-top: 30px;
        }
        
        .feature {
            text-align: center;
            padding: 20px;
            background: linear-gradient(135deg, #f8f9fa, #e9ecef);
            border-radius: 10px;
        }
        
        .feature-icon {
            font-size: 2em;
            margin-bottom: 10px;
        }
    </style>
</head>
<body>
    <div class="container">
        <h1>🚀 Salesforce Metadata Inventory</h1>
        
        <div class="description">
            <h3>📊 What this creates:</h3>
            <p>This tool generates a comprehensive Excel spreadsheet (.xlsx) with separate tabs for each major Salesforce metadata type. Each tab contains pre-configured columns to help you inventory and track your Salesforce org's components.</p>
        </div>
        
        <div class="sheet-preview">
            <div class="sheet-card">
                <div class="sheet-title">Objects</div>
                <div class="sheet-columns">Object API Name, Label, Type (Standard/Custom), Record Types, Description</div>
            </div>
            
            <div class="sheet-card">
                <div class="sheet-title">Record Types</div>
                <div class="sheet-columns">Object, Record Type Label, API Name, Active?, Business Process, Profiles Assigned</div>
            </div>
            
            <div class="sheet-card">
                <div class="sheet-title">Workflow Rules</div>
                <div class="sheet-columns">Object, Rule Name, Criteria, Evaluation Criteria, Active?, Field Updates/Tasks triggered</div>
            </div>
            
            <div class="sheet-card">
                <div class="sheet-title">Process Builder</div>
                <div class="sheet-columns">Process Name, Object, Entry Criteria, Immediate/Delayed Actions, Active?, Version</div>
            </div>
            
            <div class="sheet-card">
                <div class="sheet-title">Flows</div>
                <div class="sheet-columns">Flow Name, API Name, Version, Type (Autolaunched/Screen), Trigger Object, Variables</div>
            </div>
            
            <div class="sheet-card">
                <div class="sheet-title">Apps (Lightning)</div>
                <div class="sheet-columns">App Name, Type (Classic/Lightning), Tabs, Profiles Assigned</div>
            </div>
            
            <div class="sheet-card">
                <div class="sheet-title">Apex Classes</div>
                <div class="sheet-columns">Name, API Version, Status, Body Length, Used In (e.g., Triggers, VF, Flows)</div>
            </div>
            
            <div class="sheet-card">
                <div class="sheet-title">Apex Triggers</div>
                <div class="sheet-columns">Trigger Name, Object, Events (Before Insert, After Update, etc.), Status</div>
            </div>
            
            <div class="sheet-card">
                <div class="sheet-title">Tabs</div>
                <div class="sheet-columns">Tab Name, Object (if applicable), Available in App, Visibility by Profile</div>
            </div>
        </div>
        
        <button class="generate-btn" onclick="generateExcel()">
            📥 Generate & Download Excel File
        </button>
        
        <div id="status"></div>
        
        <div class="features">
            <div class="feature">
                <div class="feature-icon">📋</div>
                <h4>Organized Tabs</h4>
                <p>Each metadata type gets its own worksheet tab for easy navigation</p>
            </div>
            <div class="feature">
                <div class="feature-icon">📊</div>
                <h4>Pre-configured Columns</h4>
                <p>All essential fields included based on Salesforce best practices</p>
            </div>
            <div class="feature">
                <div class="feature-icon">💾</div>
                <h4>Ready to Use</h4>
                <p>Download and start documenting your org immediately</p>
            </div>
        </div>
    </div>

    <script>
        function generateExcel() {
            const statusDiv = document.getElementById('status');
            statusDiv.textContent = 'Generating Excel file...';
            statusDiv.className = 'status';
            
            try {
                // Define the sheet data
                const sheetData = {
                    "Objects": ["Object API Name", "Label", "Type (Standard/Custom)", "Record Types", "Description"],
                    "Record Types": ["Object", "Record Type Label", "API Name", "Active?", "Business Process", "Profiles Assigned"],
                    "Workflow Rules": ["Object", "Rule Name", "Criteria", "Evaluation Criteria", "Active?", "Field Updates/Tasks triggered"],
                    "Process Builder": ["Process Name", "Object", "Entry Criteria", "Immediate/Delayed Actions", "Active?", "Version"],
                    "Flows": ["Flow Name", "API Name", "Version", "Type (Autolaunched/Screen)", "Trigger Object", "Variables"],
                    "Apps (Lightning)": ["App Name", "Type (Classic/Lightning)", "Tabs", "Profiles Assigned"],
                    "Apex Classes": ["Name", "API Version", "Status", "Body Length", "Used In (e.g., Triggers, VF, Flows)"],
                    "Apex Triggers": ["Trigger Name", "Object", "Events (Before Insert, After Update, etc.)", "Status"],
                    "Tabs": ["Tab Name", "Object (if applicable)", "Available in App", "Visibility by Profile"]
                };
                
                // Create a new workbook
                const workbook = XLSX.utils.book_new();
                
                // Add each sheet
                Object.keys(sheetData).forEach(sheetName => {
                    // Create worksheet data with headers in first row
                    const wsData = [sheetData[sheetName]];
                    
                    // Add empty rows for data entry
                    for (let i = 0; i < 25; i++) {
                        wsData.push(new Array(sheetData[sheetName].length).fill(''));
                    }
                    
                    // Create worksheet
                    const worksheet = XLSX.utils.aoa_to_sheet(wsData);
                    
                    // Set column widths
                    const colWidths = sheetData[sheetName].map(header => ({
                        wch: Math.max(header.length + 2, 15)
                    }));
                    worksheet['!cols'] = colWidths;
                    
                    // Style the header row
                    const headerRange = XLSX.utils.decode_range(worksheet['!ref']);
                    for (let col = headerRange.s.c; col <= headerRange.e.c; col++) {
                        const cellAddress = XLSX.utils.encode_cell({ r: 0, c: col });
                        if (!worksheet[cellAddress]) continue;
                        worksheet[cellAddress].s = {
                            font: { bold: true, sz: 12 },
                            fill: { fgColor: { rgb: "FFA500" } },
                            alignment: { horizontal: "center" }
                        };
                    }
                    
                    // Add worksheet to workbook
                    XLSX.utils.book_append_sheet(workbook, worksheet, sheetName);
                });
                
                // Generate Excel file and download
                const excelBuffer = XLSX.write(workbook, { bookType: 'xlsx', type: 'array' });
                const blob = new Blob([excelBuffer], { 
                    type: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet' 
                });
                
                // Create download link
                const url = URL.createObjectURL(blob);
                const link = document.createElement('a');
                link.href = url;
                link.download = 'Salesforce_Metadata_Inventory.xlsx';
                document.body.appendChild(link);
                link.click();
                document.body.removeChild(link);
                URL.revokeObjectURL(url);
                
                statusDiv.textContent = '✅ Excel file generated and downloaded successfully!';
                statusDiv.className = 'status success';
                
                setTimeout(() => {
                    statusDiv.textContent = '';
                    statusDiv.className = '';
                }, 5000);
                
            } catch (error) {
                console.error('Error generating Excel file:', error);
                statusDiv.textContent = '❌ Error generating file. Please try again.';
                statusDiv.className = 'status error';
            }
        }
    </script>
</body>
</html>